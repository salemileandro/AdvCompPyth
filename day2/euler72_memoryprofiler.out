304191.0
Filename: euler72.py

Line #    Mem usage    Increment   Line Contents
================================================
     4   38.934 MiB   38.934 MiB   @profile
     5                             def gen_primes(n):
     6   38.934 MiB    0.000 MiB       l = range(2,n)
     7   38.934 MiB    0.000 MiB       primes = []
     8   38.934 MiB    0.000 MiB       for j in range(0,len(l)):
     9   38.934 MiB    0.000 MiB           p = True
    10   38.934 MiB    0.000 MiB           for d in primes:
    11   38.934 MiB    0.000 MiB               if(d > sqrt(l[j])):
    12   38.934 MiB    0.000 MiB                   break
    13   38.934 MiB    0.000 MiB               if(l[j] % d == 0):
    14   38.934 MiB    0.000 MiB                   p = False
    15   38.934 MiB    0.000 MiB                   break;
    16   38.934 MiB    0.000 MiB           if(p):
    17   38.934 MiB    0.000 MiB               primes.append(l[j])
    18                             
    19   38.934 MiB    0.000 MiB       return primes


Filename: euler72.py

Line #    Mem usage    Increment   Line Contents
================================================
    21   38.934 MiB   38.934 MiB   @profile
    22                             def factorize(n,primes):
    23   38.934 MiB    0.000 MiB       factors = []
    24   38.934 MiB    0.000 MiB       init_n = n
    25   38.934 MiB    0.000 MiB       for p in primes:
    26   38.934 MiB    0.000 MiB           while(n%p == 0):
    27   38.934 MiB    0.000 MiB               n = n/p
    28   38.934 MiB    0.000 MiB               factors.append(p)
    29   38.934 MiB    0.000 MiB           if(p > sqrt(n)):
    30   38.934 MiB    0.000 MiB               break
    31   38.934 MiB    0.000 MiB       if(n > 1):
    32   38.934 MiB    0.000 MiB           factors.append(n)
    33   38.934 MiB    0.000 MiB       return factors


Filename: euler72.py

Line #    Mem usage    Increment   Line Contents
================================================
    35   38.934 MiB   38.934 MiB   @profile 
    36                             def phi(n,primes):
    37   38.934 MiB   38.934 MiB       factors = factorize(n,primes)
    38   38.934 MiB    0.000 MiB       p = 1
    39                             
    40   38.934 MiB    0.000 MiB       for i in range(2,n):
    41   38.934 MiB    0.000 MiB           flag = True
    42   38.934 MiB    0.000 MiB           for f in factors:
    43   38.934 MiB    0.000 MiB               if i%f == 0:
    44   38.934 MiB    0.000 MiB                   flag = False
    45   38.934 MiB    0.000 MiB                   break
    46   38.934 MiB    0.000 MiB           if flag:
    47   38.934 MiB    0.000 MiB               p+=1
    48   38.934 MiB    0.000 MiB       return p


Filename: euler72.py

Line #    Mem usage    Increment   Line Contents
================================================
    50   38.934 MiB   38.934 MiB   @profile
    51                             def fast_phi(n,primes):
    52   38.934 MiB   38.934 MiB       factors = factorize(n,primes)
    53   38.934 MiB    0.000 MiB       phi = factors[0]-1
    54   38.934 MiB    0.000 MiB       for i in range(1,len(factors)):
    55   38.934 MiB    0.000 MiB           if(factors[i] == factors[i-1]):
    56   38.934 MiB    0.000 MiB               phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    57                                     else:
    58   38.934 MiB    0.000 MiB               phi *= (factors[i]-1)
    59   38.934 MiB    0.000 MiB       return phi


