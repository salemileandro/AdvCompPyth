Wrote profile results to matmult.py.lprof
Timer unit: 1e-06 s

Total time: 0.548754 s
File: matmult.py
Function: generate_matrix at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                           @profile
     5                                           def generate_matrix(n_rows, n_columns):
     6         2          3.0      1.5      0.0      m = []
     7       502        245.0      0.5      0.0      for i in range(n_rows):
     8       500     548506.0   1097.0    100.0          m.append([random.randint(0,100) for r in range(n_columns)])
     9         2          0.0      0.0      0.0      return m

Total time: 0.000407 s
File: matmult.py
Function: generate_matrix_empty at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def generate_matrix_empty(n_rows, n_columns):
    13         1          0.0      0.0      0.0      m = []
    14       251         86.0      0.3     21.1      for i in range(n_rows):
    15       250        320.0      1.3     78.6          m.append([0] * (n_columns))
    16         1          1.0      1.0      0.2      return m

Total time: 14.153 s
File: matmult.py
Function: matmult at line 18

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    18                                           @profile
    19                                           def matmult(X, Y):
    20         1        536.0    536.0      0.0      result = generate_matrix_empty(len(X), len(Y[0]))
    21                                               # iterate through rows of X 
    22       251         93.0      0.4      0.0      for i in range(len(X)):
    23                                                   # iterate through columns of Y
    24     63000      19382.0      0.3      0.1          for j in range(len(Y[0])):
    25                                                       # iterate through rows of Y
    26  15750250    4943265.0      0.3     34.9              for k in range(len(Y)):
    27  15687500    9189760.0      0.6     64.9                  result[i][j] += X[i][k] * Y[k][j]
    28         1          1.0      1.0      0.0      return result

Total time: 0.001425 s
File: matmult.py
Function: generate_matrix_np at line 42

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    42                                           @profile
    43                                           def generate_matrix_np(n_rows, n_columns):
    44         2       1425.0    712.5    100.0      return np.random.randint(100, size=(n_rows, n_columns))

Total time: 0.015431 s
File: matmult.py
Function: matmult_np at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def matmult_np(X, Y):
    48         1      15431.0  15431.0    100.0      return np.dot(X, Y)

